{"version":3,"file":"static/js/941.49dc6490.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["import styled, { keyframes } from 'styled-components';\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 400px;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #e2e1e1;\n  border-radius: 5px;\n  color: #444444;\n  background-color: #f7f7f7;\n  animation: ${fadeIn} 0.3s ease;\n\n  &:hover {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n\n  & > span {\n    margin-bottom: 5px;\n    font-weight: 700;\n  }\n\n  & > input {\n    padding: 10px;\n    border-radius: 3px;\n    border: 1px solid #e2e1e1;\n    font-size: 16px;\n    transition: border-color 0.3s ease;\n\n    &:focus {\n      outline: none;\n      border-color: #62b4e8;\n    }\n  }\n`;\n\nconst Button = styled.button`\n  padding: 10px;\n  background-color: #218838;\n  color: #ffffff;\n  border: none;\n  border-radius: 3px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #1e7f34;\n  }\n`;\n\nexport { Form, Label, Button };\n","export const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectFilter = state => state.contacts.filter.value;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { Form, Label, Button } from './ContactForm.styled';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { addContactThunk } from 'redux/contacts/thunksOperations';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const isNameAlreadyExist = contacts.some(contact => contact.name === name);\n    const isPhoneAlreadyExist = contacts.some(\n      contact => contact.number === number\n    );\n\n    if (isNameAlreadyExist) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n    if (isPhoneAlreadyExist) {\n      alert(`${number} is already in contacts!`);\n      return;\n    }\n\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    try {\n      dispatch(addContactThunk(newContact));\n      reset();\n    } catch (error) {\n      console.log('Error creating contact:', error);\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"nameInputId\">\n        Name\n        <input\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          id=\"nameInputId\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label htmlFor=\"numberInputId\">\n        Number\n        <input\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          id=\"numberInputId\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nconst FilterContainer = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n  font-size: 1rem;\n  color: #ffffff;\n`;\n\nconst FilterInput = styled.input`\n  padding: 0.5rem;\n  font-size: 1rem;\n  border: 1px solid #e2e1e1;\n  border-radius: 0.25rem;\n  transition: border-color 0.3s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #62b4e8;\n  }\n`;\n\nexport { FilterContainer, FilterInput };\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FilterContainer, FilterInput } from './Filter.styled';\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport { updateFilter } from 'redux/filter/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(updateFilter(value));\n  };\n\n  return (\n    <FilterContainer>\n      <label htmlFor=\"filterInput\">Find contacts by name</label>\n      <FilterInput\n        id=\"filterInput\"\n        type=\"text\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </FilterContainer>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nconst StyledContactList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst StyledContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border: 1px solid #e2e1e1;\n  margin-bottom: 10px;\n  background-color: #f7f7f7;\n`;\n\nconst StyledName = styled.p`\n  margin: 0;\n  font-weight: 600;\n  font-size: 18px;\n  color: #444444;\n`;\n\nconst StyledNumber = styled.span`\n  font-size: 14px;\n  color: #62b4e8;\n`;\n\nexport { StyledContactList, StyledContactItem, StyledName, StyledNumber };\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  StyledContactList,\n  StyledContactItem,\n  StyledName,\n  StyledNumber,\n} from './ContactList.styled';\n\nimport { selectContacts, selectFilter } from 'redux/contacts/contactsSelectors';\nimport {\n  deleteContactThunk,\n  fetchContactsThunk,\n} from 'redux/contacts/thunksOperations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  const handleDeleteContact = async contactId => {\n    try {\n      dispatch(deleteContactThunk(contactId));\n    } catch (error) {\n      console.log('Error deleting contact:', error);\n    }\n  };\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  // const filteredContacts = contacts.filter(contact =>\n  //   contact.name.toLowerCase().includes(filter)\n  // );\n\n  const renderedContacts = filter ? filteredContacts : contacts;\n\n  return (\n    <StyledContactList>\n      {renderedContacts.map(({ id, name, number }) => (\n        <StyledContactItem key={id}>\n          <StyledName>{name}</StyledName> <StyledNumber>{number}</StyledNumber>\n          <button type=\"button\" onClick={() => handleDeleteContact(id)}>\n            Delete\n          </button>\n        </StyledContactItem>\n      ))}\n    </StyledContactList>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { Container, SubTitle, Title } from 'components/App/App.styled';\n\n\nconst Contacts = () => {\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Filter />\n      <SubTitle>Contacts</SubTitle>\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["fadeIn","keyframes","Form","styled","Label","Button","selectContacts","state","contacts","items","selectFilter","filter","value","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","handleSubmit","preventDefault","isNameAlreadyExist","some","contact","isPhoneAlreadyExist","alert","newContact","id","nanoid","addContactThunk","reset","error","console","log","onSubmit","htmlFor","onChange","type","pattern","title","required","FilterContainer","FilterInput","target","updateFilter","StyledContactList","StyledContactItem","StyledName","StyledNumber","useEffect","fetchContactsThunk","handleDeleteContact","contactId","deleteContactThunk","filteredContacts","toLowerCase","includes","renderedContacts","map","onClick"],"sourceRoot":""}